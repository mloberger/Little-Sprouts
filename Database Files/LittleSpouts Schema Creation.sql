-- MySQL Script generated by MySQL Workbench
-- 11/25/14 00:33:57
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema LS
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `LS` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `LS` ;

-- -----------------------------------------------------
-- Table `LS`.`Parent`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LS`.`Parent` (
  `parent_id` INT NOT NULL AUTO_INCREMENT,
  `parent_pd` VARCHAR(128) NOT NULL,
  `parent_name` VARCHAR(45) NOT NULL,
  `parent_email` VARCHAR(45) NULL,
  PRIMARY KEY (`parent_id`),
  UNIQUE INDEX `parent_id_UNIQUE` (`parent_id` ASC),
  UNIQUE INDEX `parent_email_UNIQUE` (`parent_email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LS`.`Teacher`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LS`.`Teacher` (
  `teacher_id` INT NOT NULL AUTO_INCREMENT,
  `teacher_name` VARCHAR(45) NOT NULL,
  `teacher_phone` INT NULL,
  `teacher_maxHours` INT NOT NULL,
  `teacher_pd` VARCHAR(128) NULL,
  `teacher_email` VARCHAR(45) NULL,
  PRIMARY KEY (`teacher_id`),
  UNIQUE INDEX `teacher_id_UNIQUE` (`teacher_id` ASC),
  UNIQUE INDEX `teacher_email_UNIQUE` (`teacher_email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LS`.`Availability`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LS`.`Availability` (
  `availability_id` INT NOT NULL AUTO_INCREMENT,
  `availability_weekId` VARCHAR(45) NULL,
  `availability_mondayHours` VARCHAR(45) NULL,
  `availability_tuesdayHours` VARCHAR(45) NULL,
  `availability_wednesdayHours` VARCHAR(45) NULL,
  `availability_thursdayHours` VARCHAR(45) NULL,
  `availability_fridayHours` VARCHAR(45) NULL,
  `Teacher_teacher_id` INT NOT NULL,
  PRIMARY KEY (`availability_id`),
  INDEX `fk_WeeklySchedule_Teacher1_idx` (`Teacher_teacher_id` ASC),
  UNIQUE INDEX `weeklySchedule_id_UNIQUE` (`availability_id` ASC),
  UNIQUE INDEX `weeklySchedule_weekId_UNIQUE` (`availability_weekId` ASC),
  UNIQUE INDEX `Teacher_teacher_id_UNIQUE` (`Teacher_teacher_id` ASC),
  CONSTRAINT `fk_WeeklySchedule_Teacher1`
    FOREIGN KEY (`Teacher_teacher_id`)
    REFERENCES `LS`.`Teacher` (`teacher_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LS`.`Child`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LS`.`Child` (
  `child_id` INT NOT NULL AUTO_INCREMENT,
  `child_name` VARCHAR(45) NOT NULL,
  `Parent_parent_id` INT NOT NULL,
  `Availability_availability_id` INT NOT NULL,
  PRIMARY KEY (`child_id`),
  INDEX `fk_Child_Parent_idx` (`Parent_parent_id` ASC),
  UNIQUE INDEX `child_id_UNIQUE` (`child_id` ASC),
  UNIQUE INDEX `Parent_parent_id_UNIQUE` (`Parent_parent_id` ASC),
  INDEX `fk_Child_Availability1_idx` (`Availability_availability_id` ASC),
  CONSTRAINT `fk_Child_Parent`
    FOREIGN KEY (`Parent_parent_id`)
    REFERENCES `LS`.`Parent` (`parent_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Child_Availability1`
    FOREIGN KEY (`Availability_availability_id`)
    REFERENCES `LS`.`Availability` (`availability_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LS`.`Request`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LS`.`Request` (
  `request_id` INT NOT NULL AUTO_INCREMENT,
  `request_requesterId` INT NULL,
  `request_requestDay` DATE NULL,
  `request_requestWeekId` INT NULL,
  `request_originalStart` DATETIME NULL,
  `request_requestedStart` DATETIME NULL,
  `request_originalEnd` DATETIME NULL,
  `request_requestedEnd` DATETIME NULL,
  `Parent_parent_id` INT NOT NULL,
  `Teacher_teacher_id` INT NOT NULL,
  `Availability_availability_id` INT NOT NULL,
  PRIMARY KEY (`request_id`),
  INDEX `fk_Request_Parent1_idx` (`Parent_parent_id` ASC),
  INDEX `fk_Request_Teacher1_idx` (`Teacher_teacher_id` ASC),
  UNIQUE INDEX `request_id_UNIQUE` (`request_id` ASC),
  UNIQUE INDEX `request_requesterId_UNIQUE` (`request_requesterId` ASC),
  UNIQUE INDEX `Parent_parent_id_UNIQUE` (`Parent_parent_id` ASC),
  UNIQUE INDEX `Teacher_teacher_id_UNIQUE` (`Teacher_teacher_id` ASC),
  INDEX `fk_Request_Availability1_idx` (`Availability_availability_id` ASC),
  CONSTRAINT `fk_Request_Parent1`
    FOREIGN KEY (`Parent_parent_id`)
    REFERENCES `LS`.`Parent` (`parent_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Request_Teacher1`
    FOREIGN KEY (`Teacher_teacher_id`)
    REFERENCES `LS`.`Teacher` (`teacher_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Request_Availability1`
    FOREIGN KEY (`Availability_availability_id`)
    REFERENCES `LS`.`Availability` (`availability_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LS`.`Management`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LS`.`Management` (
  `management_id` INT NOT NULL AUTO_INCREMENT,
  `management_pd` VARCHAR(128) NULL,
  `management_email` VARCHAR(45) NULL,
  PRIMARY KEY (`management_id`),
  UNIQUE INDEX `management_id_UNIQUE` (`management_id` ASC),
  UNIQUE INDEX `management_email_UNIQUE` (`management_email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LS`.`Request_has_Management`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LS`.`Request_has_Management` (
  `Request_request_id` INT NOT NULL,
  `Management_management_id` INT NOT NULL,
  PRIMARY KEY (`Request_request_id`, `Management_management_id`),
  INDEX `fk_Request_has_Management_Management1_idx` (`Management_management_id` ASC),
  INDEX `fk_Request_has_Management_Request1_idx` (`Request_request_id` ASC),
  CONSTRAINT `fk_Request_has_Management_Request1`
    FOREIGN KEY (`Request_request_id`)
    REFERENCES `LS`.`Request` (`request_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Request_has_Management_Management1`
    FOREIGN KEY (`Management_management_id`)
    REFERENCES `LS`.`Management` (`management_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LS`.`Classroom`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LS`.`Classroom` (
  `classroom_id` INT NOT NULL AUTO_INCREMENT,
  `classroom_maxCap` INT NOT NULL,
  `classroom_buildingName` VARCHAR(45) NULL,
  PRIMARY KEY (`classroom_id`),
  UNIQUE INDEX `classroom_id_UNIQUE` (`classroom_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LS`.`Classroom_has_Management`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LS`.`Classroom_has_Management` (
  `Classroom_classroom_id` INT NOT NULL,
  `Management_management_id` INT NOT NULL,
  PRIMARY KEY (`Classroom_classroom_id`, `Management_management_id`),
  INDEX `fk_Classroom_has_Management_Management1_idx` (`Management_management_id` ASC),
  INDEX `fk_Classroom_has_Management_Classroom1_idx` (`Classroom_classroom_id` ASC),
  CONSTRAINT `fk_Classroom_has_Management_Classroom1`
    FOREIGN KEY (`Classroom_classroom_id`)
    REFERENCES `LS`.`Classroom` (`classroom_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Classroom_has_Management_Management1`
    FOREIGN KEY (`Management_management_id`)
    REFERENCES `LS`.`Management` (`management_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
